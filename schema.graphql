### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Authentication {
  token: String!
  user: User!
}

type Device {
  brand: String!
  id: ID!
  image: String!
  interactions: [Interaction!]!
  manuals: [Manual!]!
  model: String!
  type: DeviceType!
  user: User!
}

enum DeviceType {
  DYNAMIC
  STATIC
}

type Interaction {
  color: String
  device: Device!
  height: Float!
  id: ID!
  rotation: Float!
  type: InteractionType!
  width: Float!
  x: Float!
  y: Float!
}

enum InteractionType {
  ANCHOR
  CIRCLE
  SQUARE
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Manual {
  device: Device!
  id: ID!
  steps: [ManualStep!]!
  title: String!
}

type ManualStep {
  id: ID!
  interactions: [Interaction!]!
  manual: Manual!
  order: Int!
  text: String!
}

input ManualStepInteraction {
  color: String!
  id: ID!
}

type Mutation {
  createDevice(brand: String!, image: Upload!, interactions: [UpsertInteraction!]!, model: String!, type: DeviceType!): Device!
  createManual(deviceId: ID!, steps: [UpsertManualStep!]!, title: String!): Manual!
  createUser(inviteId: ID!, password: String!): User!
  deleteDevice(id: ID!): Device
  deleteManual(id: ID!): Manual
  deleteUser(id: ID!): User
  inviteUser(email: String!): Boolean!
  login(email: String!, password: String!): Authentication!
  updateDevice(brand: String!, id: ID!, image: Upload, interactions: [UpsertInteraction!]!, model: String!): Device
  updateManual(id: ID!, steps: [UpsertManualStep!]!, title: String!): Manual
  updateUser(email: String!, id: ID!, role: UserRole!): User
}

type Query {
  device(id: ID!): Device
  devices(search: String): [Device!]!
  manual(id: ID!): Manual
  manuals(search: String): [Manual!]!
  user(id: ID!): User
  users: [User!]!
}

scalar Upload

input UpsertInteraction {
  height: Float!
  id: ID
  rotation: Float!
  type: InteractionType!
  width: Float!
  x: Float!
  y: Float!
}

input UpsertManualStep {
  interactions: [ManualStepInteraction!]!
  order: Int!
  text: String!
}

type User {
  devices: [Device!]!
  email: String!
  id: ID!
  role: UserRole!
}

enum UserRole {
  ADMIN
  USER
}
